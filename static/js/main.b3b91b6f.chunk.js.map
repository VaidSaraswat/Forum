{"version":3,"sources":["CommentDetail.js","Post/components/Post.jsx","PostEditor/components/PostEditor.jsx","ThreadDisplay/components/ThreadDisplay.jsx","App.js","index.js"],"names":["CommentDetail","props","react_default","a","createElement","className","href","alt","src","avatar","author","timeAgo","text","Post","src_CommentDetail","faker","name","findName","date","weekday","postBody","image","PostEditor","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newPostBody","handlePostEditorInputChange","bind","assertThisInitialized","createPost","ev","setState","target","value","addPost","onChange","onClick","React","Component","ThreadDisplay","databaseRef","database","ref","child","updateLocalState","posts","on","snapshot","response","val","postToSave","push","set","brokenDownPost","split","map","idx","components_Post","key","components_PostEditor","App","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","components_ThreadDisplay","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qRAoBeA,EAlBM,SAAAC,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,UACpBH,EAAAC,EAAAC,cAAA,OAAKG,IAAI,SAASC,IAAKP,EAAMQ,UAE/BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,UACnBJ,EAAMS,QAETR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQJ,EAAMU,UAEhCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,EAAMW,SCEtBC,EAbF,SAACZ,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACU,EAAD,CACIJ,OAAQK,IAAMC,KAAKC,WACnBN,QAASI,IAAMG,KAAKC,UACpBP,KAAQX,EAAMmB,SACdX,OAAQM,IAAMM,MAAMZ,cC6Bfa,uBApCb,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzB,KAED6B,MAAQ,CACXC,YAAa,IAGfR,EAAKS,4BAA8BT,EAAKS,4BAA4BC,KAAjCT,OAAAU,EAAA,EAAAV,CAAAD,IACnCA,EAAKY,WAAaZ,EAAKY,WAAWF,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IARDA,2FAWSa,GAC1BV,KAAKW,SAAS,CACZN,YAAaK,EAAGE,OAAOC,6CAKzBb,KAAKzB,MAAMuC,QAAQd,KAAKI,MAAMC,aAC9BL,KAAKW,SAAS,CACZN,YAAa,sCAKf,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,iCAAiCkC,MAAOb,KAAKI,MAAMC,YAAaU,SAAUf,KAAKM,8BACnG9B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCqC,QAAShB,KAAKS,YAArE,iBA9BeQ,IAAMC,YCwDhBC,cAlDb,SAAAA,EAAY5C,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,IACjBtB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,KAAAH,KAAMzB,KAED6C,YAAcvB,EAAKtB,MAAM8C,SAASC,MAAMC,MAAM,QACnD1B,EAAKiB,QAAUjB,EAAKiB,QAAQP,KAAbT,OAAAU,EAAA,EAAAV,CAAAD,IACfA,EAAK2B,iBAAmB3B,EAAK2B,iBAAiBjB,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IAExBA,EAAKO,MAAQ,CACXqB,MAAO,IARQ5B,oFAYE,IACZ2B,EAAoBxB,KAApBwB,iBACPxB,KAAKoB,YAAYM,GAAG,cAAe,SAAAC,GACjC,IAAMC,EAAWD,EAASE,MAC1BL,EAAiBI,qCAIblC,GACN,IAAMoC,EAAa,CAACpC,YACpBM,KAAKoB,YAAYW,OAAOC,IAAIF,4CAGbF,GACf,IAAMH,EAAQzB,KAAKI,MAAMqB,MACnBQ,EAAiBL,EAASlC,SAASwC,MAAM,WAC/CT,EAAMM,KAAKE,GACXjC,KAAKW,SAAS,CACZc,MAAOA,qCAKT,OACEjD,EAAAC,EAAAC,cAAA,WAEMsB,KAAKI,MAAMqB,MAAMU,IAAI,SAACzC,EAAU0C,GAC9B,OACE5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAMC,IAAKF,EAAK1C,SAAUA,MAIhClB,EAAAC,EAAAC,cAAC6D,EAAD,CAAYzB,QAASd,KAAKc,kBA7CRG,IAAMC,4BCwBnBsB,+BAzBb,SAAAA,EAAYjE,GAAO,IAAAsB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAA,OACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMzB,KAaDkE,IAAMC,IAASC,cAVpB,CACEC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBACnBC,MAAO,yCAITrD,EAAKwB,SAAWxB,EAAK4C,IAAIpB,WAfRxB,wEAmBjB,OACErB,EAAAC,EAAAC,cAACyE,EAAD,CAAe9B,SAAUrB,KAAKqB,kBArBlBJ,IAAMC,4BCAxBkC,IAASC,OACP7E,EAAAC,EAAAC,cAAC4E,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.b3b91b6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CommentDetail= props => {\r\n  return(\r\n    <div className=\"comment\">\r\n      <a href=\"/\" className=\"avatar\">\r\n        <img alt=\"avatar\" src={props.avatar}/>\r\n      </a>\r\n      <div className=\"content\">\r\n        <a href=\"/\" className=\"author\">\r\n          {props.author}\r\n        </a>\r\n        <div className=\"metadata\">\r\n          <span className=\"date\">{props.timeAgo}</span>\r\n        </div>\r\n        <div className=\"text\">{props.text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CommentDetail;\r\n","import React from 'react';\r\nimport '../styles/Post.css';\r\nimport faker from 'faker'\r\nimport CommentDetail from '../../CommentDetail';\r\nconst Post = (props) => (\r\n  <div className=\"panel panel-default post-body ui container comments\">\r\n    <div className=\"panel-body \">\r\n      <CommentDetail\r\n          author={faker.name.findName()}\r\n          timeAgo={faker.date.weekday()}\r\n          text = {props.postBody}\r\n          avatar={faker.image.avatar()}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport '../styles/PostEditor.css';\r\n\r\nclass PostEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newPostBody: '',\r\n    };\r\n\r\n    this.handlePostEditorInputChange = this.handlePostEditorInputChange.bind(this);\r\n    this.createPost = this.createPost.bind(this);\r\n  }\r\n\r\n  handlePostEditorInputChange(ev) {\r\n    this.setState({\r\n      newPostBody: ev.target.value\r\n    });\r\n  }\r\n\r\n  createPost() {\r\n    this.props.addPost(this.state.newPostBody);\r\n    this.setState({\r\n      newPostBody: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel panel-default post-editor\">\r\n        <div className=\"panel-body\">\r\n          <textarea className=\"form-control post-editor-input\" value={this.state.newPostBody} onChange={this.handlePostEditorInputChange} />\r\n          <button className=\"btn btn-primary post-editor-button\" onClick={this.createPost}>Post</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostEditor;\r\n","import React from 'react';\r\nimport Post from '../../Post/components/Post';\r\nimport PostEditor from '../../PostEditor/components/PostEditor';\r\nimport CommentDetail from '../../CommentDetail';\r\nimport faker from 'faker';\r\n\r\n\r\n\r\nclass ThreadDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.databaseRef = this.props.database.ref().child('post');\r\n    this.addPost = this.addPost.bind(this);\r\n    this.updateLocalState = this.updateLocalState.bind(this);\r\n\r\n    this.state = {\r\n      posts: [],\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {updateLocalState} = this;\r\n    this.databaseRef.on('child_added', snapshot => {\r\n      const response = snapshot.val();\r\n      updateLocalState(response);\r\n    });\r\n  }\r\n\r\n  addPost(postBody) {\r\n    const postToSave = {postBody};\r\n    this.databaseRef.push().set(postToSave);\r\n  }\r\n\r\n  updateLocalState(response) {\r\n    const posts = this.state.posts;\r\n    const brokenDownPost = response.postBody.split(/[\\r\\n]/g);\r\n    posts.push(brokenDownPost);\r\n    this.setState({\r\n      posts: posts,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          {\r\n            this.state.posts.map((postBody, idx) => {\r\n              return (\r\n                <Post key={idx} postBody={postBody}/>\r\n              )\r\n            })\r\n          }\r\n          <PostEditor addPost={this.addPost}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreadDisplay;\r\n","import React from 'react';\r\nimport ThreadDisplay from './ThreadDisplay/components/ThreadDisplay';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const config =\r\n    {\r\n      apiKey: \"AIzaSyDmSvqkEZ1smUcazC5PkPRbixeEWYAuiDs\",\r\n      authDomain: \"forum-73a21.firebaseapp.com\",\r\n      databaseURL: \"https://forum-73a21.firebaseio.com\",\r\n      projectId: \"forum-73a21\",\r\n      storageBucket: \"forum-73a21.appspot.com\",\r\n      messagingSenderId: \"1068023669678\",\r\n      appId: \"1:1068023669678:web:0f1bc15288734555\"\r\n    };\r\n\r\n    this.app = firebase.initializeApp(config);\r\n    this.database = this.app.database();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThreadDisplay database={this.database} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}